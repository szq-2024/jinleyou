{"version":3,"names":["user","namespaced","state","info","common_vendor","index","getStorageSync","token","mutations","SET_INFO","payload","setStorageSync","SET_TOKEN","CLEAR_ALL","actions","fetchUserInfo","_ref","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","commit","data","wrap","_callee$","_context","prev","next","api","getInfo","sent","abrupt","t0","stop","checkTokenValidity","_ref2","_callee2","_callee2$","_context2","validateToken","getters","isLoggedIn","userInfo"],"sources":["user.js"],"sourcesContent":["// store/modules/user.js\nexport default {\n  namespaced: true,\n  state: () => ({\n    info: uni.getStorageSync('userInfo') || {},\n    token: null\n  }),\n\tmutations: {\n\t\tSET_INFO(state, payload) {\n\t\t\tstate.info = payload;\r\n\t\t\tuni.setStorageSync('userInfo', payload);\n\t\t},\n\t\tSET_TOKEN(state, token) {\n\t\t\tstate.token = token\n\t\t},\n\t\tCLEAR_ALL(state) {\n\t\t\tstate.info = null\n\t\t\tstate.token = null\n\t\t}\n\t},\n  actions: {\n    async fetchUserInfo({ commit }) {\n      try {\n        const data = await api.user.getInfo()\n        commit('SET_INFO', data)\n        return data\n      } catch (error) {\n        commit('CLEAR_ALL')\n        throw error\n      }\n    },\r\n\tasync checkTokenValidity({ commit, state }) {\r\n\t    try {\r\n\t      // 示例：验证token有效性\r\n\t      await api.validateToken(state.token); // 假设存在API方法\r\n\t      // 如果有效，可能不需要额外操作\r\n\t    } catch (error) {\r\n\t      commit('CLEAR_ALL'); // 无效则清除状态\r\n\t      throw error;\r\n\t    }\r\n\t  }\n  },\n  getters: {\n    isLoggedIn: state => !!state.token,\n    userInfo: state => state.info || {}\n  }\n}"],"mappings":";;;;;;AACA,IAAeA,IAAA;EACbC,UAAA,EAAY;EACZC,KAAA,EAAO,SAAPA,MAAA;IAAA,OAAc;MACZC,IAAA,EAAMC,aAAA,CAAGC,KAAA,CAACC,cAAA,CAAe,UAAU,KAAK,CAAE;MAC1CC,KAAA,EAAO;IACX;EAAA;EACCC,SAAA,EAAW;IACVC,QAAA,WAAAA,SAASP,KAAA,EAAOQ,OAAA,EAAS;MACxBR,KAAA,CAAMC,IAAA,GAAOO,OAAA;MACbN,aAAA,CAAAC,KAAA,CAAIM,cAAA,CAAe,YAAYD,OAAO;IACtC;IACDE,SAAA,WAAAA,UAAUV,KAAA,EAAOK,KAAA,EAAO;MACvBL,KAAA,CAAMK,KAAA,GAAQA,KAAA;IACd;IACDM,SAAA,WAAAA,UAAUX,KAAA,EAAO;MAChBA,KAAA,CAAMC,IAAA,GAAO;MACbD,KAAA,CAAMK,KAAA,GAAQ;IACd;EACD;EACAO,OAAA,EAAS;IACDC,aAAA,WAAAA,cAAAC,IAAA,EAA0B;MAAA,OAAAC,kBAAA,eAAAC,oBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,MAAA,EAAAC,IAAA;QAAA,OAAAJ,oBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAVN,MAAA,GAAAL,IAAA,CAAAK,MAAA;cAAAI,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAECC,GAAA,CAAI5B,IAAA,CAAK6B,OAAA,EAAS;YAAA;cAA/BP,IAAA,GAAAG,QAAA,CAAAK,IAAA;cACNT,MAAA,CAAO,YAAYC,IAAI;cAAA,OAAAG,QAAA,CAAAM,MAAA,WAChBT,IAAA;YAAA;cAAAG,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAO,EAAA,GAAAP,QAAA;cAEPJ,MAAA,CAAO,WAAW;cAAA,MAAAI,QAAA,CAAAO,EAAA;YAAA;YAAA;cAAA,OAAAP,QAAA,CAAAQ,IAAA;UAAA;QAAA,GAAAb,OAAA;MAAA;IAGrB;IACEc,kBAAA,WAAAA,mBAAAC,KAAA,EAAsC;MAAA,OAAAlB,kBAAA,eAAAC,oBAAA,GAAAC,IAAA,UAAAiB,SAAA;QAAA,IAAAf,MAAA,EAAAnB,KAAA;QAAA,OAAAgB,oBAAA,GAAAK,IAAA,UAAAc,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAZ,IAAA,GAAAY,SAAA,CAAAX,IAAA;YAAA;cAAjBN,MAAA,GAAAc,KAAA,CAAAd,MAAA,EAAQnB,KAAA,GAAAiC,KAAA,CAAAjC,KAAA;cAAAoC,SAAA,CAAAZ,IAAA;cAAAY,SAAA,CAAAX,IAAA;cAAA,OAGvBC,GAAA,CAAIW,aAAA,CAAcrC,KAAA,CAAMK,KAAK;YAAA;cAAA+B,SAAA,CAAAX,IAAA;cAAA;YAAA;cAAAW,SAAA,CAAAZ,IAAA;cAAAY,SAAA,CAAAN,EAAA,GAAAM,SAAA;cAGnCjB,MAAA,CAAO,WAAW;cAAA,MAAAiB,SAAA,CAAAN,EAAA;YAAA;YAAA;cAAA,OAAAM,SAAA,CAAAL,IAAA;UAAA;QAAA,GAAAG,QAAA;MAAA;IAGrB;EACD;EACDI,OAAA,EAAS;IACPC,UAAA,EAAY,SAAZA,WAAYvC,KAAA;MAAA,OAAS,CAAC,CAACA,KAAA,CAAMK,KAAA;IAAA;IAC7BmC,QAAA,EAAU,SAAVA,SAAUxC,KAAA;MAAA,OAASA,KAAA,CAAMC,IAAA,IAAQ,CAAE;IAAA;EACpC;AACH","ignoreList":[]}