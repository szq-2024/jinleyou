{"version":3,"file":"http.js","sources":["api/http.js"],"sourcesContent":["//api/http.js\r\nimport { checkTokenExpiration } from './auth';\r\n\r\n// ÁéØÂ¢ÉÈÖçÁΩÆ\nexport const ENV_CONFIG = { \n  development: 'http://localhost:3000',\n  production: 'https://apifoxmock.com/m1/4728220-0-default'\n}\n\n// ÂÖ®Â±ÄÈÖçÁΩÆ\nconst GLOBAL_CONFIG = {\n\ttimeout: 10000, // 10ÁßíË∂ÖÊó∂\n\tretryCount: 1, // Â§±Ë¥•ÈáçËØïÊ¨°Êï∞\n}\n\n/**\n * Â¢ûÂº∫ÂûãËØ∑Ê±ÇÂ∞ÅË£Ö\n * @param {string} url - ËØ∑Ê±ÇÂú∞ÂùÄ\n * @param {object} options - ËØ∑Ê±ÇÈÖçÁΩÆ\n * @returns {Promise} \n */\r\n// ‰øÆÊîπÈªòËÆ§ÂØºÂá∫‰∏∫ÂëΩÂêçÂØºÂá∫\nexport const http = {\n  get: (url, options = {}) => enhancedHttp(url, { ...options, method: 'GET' }),\n  post: (url, data, options = {}) => enhancedHttp(url, { ...options, method: 'POST', data }),\n  put: (url, data, options = {}) => enhancedHttp(url, { ...options, method: 'PUT', data }),\n  delete: (url, options = {}) => enhancedHttp(url, { ...options, method: 'DELETE' })\n}\r\n\r\n\nexport async function enhancedHttp(url, options = {}) {\n  // ÂêàÂπ∂ÈÖçÁΩÆ\n\tconst mergedOptions = {\n\t\tmethod: 'GET',\n\t\tdata: {},\n\t\theaders: {},\n\t\t...options\n\t}\n\n\t// ËØ∑Ê±ÇÊã¶Êà™Âô®\n\tconst { headers, shouldAuth = true } = await requestInterceptor()\n  \n\t// ÊûÑÈÄ†ËØ∑Ê±ÇÂ§¥\n\tconst finalHeaders = {\n\t\t'Content-Type': 'application/json',\r\n\t\t'Access-Control-Allow-Origin': '*',\n\t\t...headers,\n\t\t...mergedOptions.headers\n\t}\n\n\t// TokenÂ§ÑÁêÜ\n\tif (shouldAuth) {\r\n\t\tlet validToken = checkTokenExpiration()\n\t\t\r\n\t\t  // Ëá™Âä®Âà∑Êñ∞Êú∫Âà∂\r\n\t\tif (!validToken && shouldAuth) {\r\n\t\t    try {\r\n\t\t\t\tconst newToken = await checkTokenExpiration()\r\n\t\t\t\tvalidToken = newToken\r\n\t\t    } catch (e) {\r\n\t\t\t\tconsole.error('TokenÂà∑Êñ∞Â§±Ë¥•:', e)\r\n\t\t    }\r\n\t\t}\n\t\tif (validToken) {\n\t\t\tfinalHeaders.Authorization = `Bearer ${validToken}`\n\t\t}\n\t}\n\n\t// ÂèëËµ∑ËØ∑Ê±Ç\n\ttry {\r\n\t\t // üî¥ Êñ∞Â¢ûËØ∑Ê±ÇÂºÄÂßãÊó•ÂøóÔºàÊ≠•È™§3Ôºâ\r\n\t\t    console.debug('[HTTP] ËØ∑Ê±ÇÂºÄÂßã', {\r\n\t\t      timestamp: new Date().toISOString(),\r\n\t\t      url: ENV_CONFIG[process.env.NODE_ENV] + url,\r\n\t\t      method: mergedOptions.method,\r\n\t\t      data: mergedOptions.data,\r\n\t\t      headers: finalHeaders\r\n\t\t    });\r\n\t\t\r\n\t\t    const response = await requestWithRetry({\r\n\t\t      url: ENV_CONFIG[process.env.NODE_ENV] + url,\r\n\t\t      data: mergedOptions.data,\r\n\t\t      method: mergedOptions.method,\r\n\t\t      header: finalHeaders,\r\n\t\t      timeout: GLOBAL_CONFIG.timeout\r\n\t\t    });\r\n\t\t\r\n\t\t    // üî¥ Êñ∞Â¢ûÂéüÂßãÂìçÂ∫îÊó•ÂøóÔºàÊ≠•È™§3Ôºâ\r\n\t\t    console.debug('[HTTP] ÂéüÂßãÂìçÂ∫î', {\r\n\t\t      status: response.statusCode,\r\n\t\t      headers: response.header,\r\n\t\t      data: response.data\r\n\t\t    });\r\n\t\t\r\n\t\t    // ÂìçÂ∫îÊã¶Êà™Âô®\r\n\t\t    return responseInterceptor(response);\r\n\t\t  } catch (error) {\r\n\t\t    // üî¥ Êñ∞Â¢ûÈîôËØØËØ¶ÊÉÖÊó•ÂøóÔºàÊ≠•È™§3Ôºâ\r\n\t\t    console.error('[HTTP] ËØ∑Ê±ÇÂ§±Ë¥•', {\r\n\t\t      errorType: error.constructor.name,\r\n\t\t      message: error.message,\r\n\t\t      stack: error.stack,\r\n\t\t      retryCount: GLOBAL_CONFIG.retryCount,\r\n\t\t      url: ENV_CONFIG[process.env.NODE_ENV] + url\r\n\t\t    });\r\n\t\t    \r\n\t\t    errorHandler(error);\r\n\t\t    throw error;\r\n\t\t  }\n}\nconst platformAdapter = {\n  processResponse(res) {\n    // Â§ÑÁêÜÂæÆ‰ø°Â∞èÁ®ãÂ∫èËøîÂõûÂÄºÔºàËøîÂõûÊï∞ÁªÑÔºâ\n    if (Array.isArray(res)) {\n      const [error, successRes] = res;\n      return error ? { error } : { response: successRes };\n    }\n    // Â§ÑÁêÜH5ËøîÂõûÂÄºÔºàËøîÂõûPromiseÔºâ\n    return { response: res };\n  }\n};\n/**\n * Â∏¶ÈáçËØïÊú∫Âà∂ÁöÑËØ∑Ê±Ç\n */\n// ‰øÆÊ≠£requestWithRetryÂáΩÊï∞\n// http.js ‰øÆÊîπÂêé\nasync function requestWithRetry(params, retry = GLOBAL_CONFIG.retryCount) {\n  for (let i = 0; i <= retry; i++) {\n    try {\n      const res = await uni.request(params);\n      \n      // Â§ÑÁêÜÂæÆ‰ø°Â∞èÁ®ãÂ∫èÁöÑÊï∞ÁªÑÂìçÂ∫î\n      if (Array.isArray(res)) {\n        const [error, successRes] = res;\n        if (error) throw error;\n        return {\n          statusCode: successRes.statusCode,\n          data: successRes.data,\n          headers: successRes.header || {}\n        };\n      }\n      \n      // Â§ÑÁêÜÂÖ∂‰ªñÂπ≥Âè∞ÁöÑÂìçÂ∫î\n      return {\n        statusCode: res.statusCode || res.status,\n        data: res.data,\n        headers: res.header || res.headers || {}\n      };\n    } catch (error) {\n      if (i === retry) {\n        throw Object.assign(error, { \n          requestUrl: params.url,\n          retryCount: i + 1 \n        });\n      }\n    }\n  }\n  throw new Error(`ËØ∑Ê±ÇÂ§±Ë¥•: Ë∂ÖËøáÊúÄÂ§ßÈáçËØïÊ¨°Êï∞ (${retry})`);\n}\n\n/**\n * ËØ∑Ê±ÇÊã¶Êà™Âô®ÔºàÂèØÊâ©Â±ïÔºâ\n */\nasync function requestInterceptor() {\n  // ÂèØ‰ª•Âú®ËøôÈáåÊ∑ªÂä†ÂÖ®Â±ÄËØ∑Ê±ÇÂâçÈÄªËæë\n\treturn {\n\t\theaders: {},\n\t\tshouldAuth: true\n\t}\n}\n\n/**\n * ÂìçÂ∫îÊã¶Êà™Âô®\n */\nfunction responseInterceptor(response) {\n  // 1. Âü∫Á°ÄÂØπË±°Ê†°È™å\n  if (!response || typeof response !== 'object') {\n    throw new Error('ÂìçÂ∫îÂØπË±°Ê†ºÂºèÈîôËØØ: ÈùûÂØπË±°Á±ªÂûã');\n  }\n\n  // 2. ÂÖ≥ÈîÆÂ≠óÊÆµÊ†°È™å\n  const { statusCode, data } = response;\n  if (typeof statusCode === 'undefined') {\n    throw new Error('ÂìçÂ∫îÁº∫Â∞ëÁä∂ÊÄÅÁ†Å (statusCode)');\n  }\n  if (typeof data === 'undefined') {\n    throw new Error('ÂìçÂ∫îÁº∫Â∞ëÊï∞ÊçÆÂ≠óÊÆµ (data)');\n  }\n\n  // 3. Áä∂ÊÄÅÁ†ÅÂ§ÑÁêÜ\n  switch (true) {\n    case statusCode === 401:\n      uni.navigateTo({ url: '/pages/login' });\n      throw new Error('ÁôªÂΩïÁä∂ÊÄÅÂ∑≤ËøáÊúü');\n    case statusCode >= 500:\n      throw new Error(`ÊúçÂä°Âô®ÈîôËØØ (${statusCode})`);\n    case statusCode >= 400:\n      throw new Error(`ÂÆ¢Êà∑Á´ØÈîôËØØ (${statusCode})`);\n    case statusCode === 200:\n      return data; // Ê≠£Â∏∏ËøîÂõûÊï∞ÊçÆ\n    default:\n      throw new Error(`Êú™Áü•Áä∂ÊÄÅÁ†Å: ${statusCode}`);\n  }\n}\n\n/**\n * Áªü‰∏ÄÈîôËØØÂ§ÑÁêÜ\n */\nfunction errorHandler(error) {\n\tconsole.error('ËØ∑Ê±ÇÈîôËØØ:', error)\n\tuni.showToast({\n\t\ttitle: error.message || 'ÁΩëÁªúËØ∑Ê±ÇÂ§±Ë¥•',\n\t\ticon: 'none',\n\t\tduration: 2000\n\t})\n}"],"names":["checkTokenExpiration","uni"],"mappings":"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"}